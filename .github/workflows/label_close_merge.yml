name: Assign Label on Merge

on:
  pull_request:
    types: [closed]

jobs:
  assign-label-on-merge:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Assign Label to PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.CRM_PULL_REQUEST_TOKEN }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['done']
            })

      - name: Remove 'review' Label from PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.CRM_PULL_REQUEST_TOKEN }}
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'review'
            })

      - name: Find Connected Issue
        id: find_issue
        run: |
          # Get the pull request body
          pull_request_body=$(echo "${{ github.event.pull_request.body }}" | tr -d '\r')

          # Extract the connected issue number
          connected_issue=$(echo "$pull_request_body" | grep -o '#[0-9]\+' | head -n 1 | tr -d '#')

          # Debug output to verify the connected issue number
          echo "Connected Issue Number: $connected_issue"

          # Set the connected issue number as an output
          echo "::set-output name=issue_number::$connected_issue"
        shell: bash

      - name: Assign Label to Issue
        if: steps.find_issue.outputs.issue_number
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.CRM_PULL_REQUEST_TOKEN }}
          script: |
            const issueNumber = ${{ steps.find_issue.outputs.issue_number }};
            console.log("Assigning label 'done' to issue:", issueNumber);
            await github.rest.issues.addLabels({
              issue_number: issueNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['done']
            });

      - name: Remove 'review' Label from Issue
        if: steps.find_issue.outputs.issue_number
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.CRM_PULL_REQUEST_TOKEN }}
          script: |
            const issueNumber = ${{ steps.find_issue.outputs.issue_number }};
            console.log("Removing label 'review' from issue:", issueNumber);
            await github.rest.issues.removeLabel({
              issue_number: issueNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'review'
            });

      - name: Install dependencies
        run: |
          cd crm-base-api
          yarn install

      - name: Run tests and generate JSON report
        run: |
          cd crm-base-api
          mkdir -p test-results
          yarn test --verbose --coverage --json --outputFile=test-results/test-results.json

      - name: Generate HTML report
        run: |
          cd crm-base-api
          yarn add -D jest-html-reporter
          yarn jest --reporters=jest-html-reporter --outputPath=$(pwd)/test-results/test-report.html

      - name: Convert HTML report to image
        run: |
          sudo apt-get install -y wkhtmltopdf
          cd crm-base-api
          wkhtmltoimage $(pwd)/test-results/test-report.html $(pwd)/test-results/test-report.png

      - name: Archive test report image
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: $(pwd)/test-results/test-report.png

      - name: Send test report email
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: mail.protonmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Test Report
          body: Test results attached.
          to: aintellisense@proton.me
          from: ${{ secrets.EMAIL_USERNAME }}
          attachments: $(pwd)/test-results/test-report.png

